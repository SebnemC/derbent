# Database reset profile - uses PostgreSQL for production-like reset
# PostgreSQL database configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/derbent
spring.datasource.username=postgres
spring.datasource.password=derbent
spring.datasource.driver-class-name=org.postgresql.Driver

# Create tables and drop existing ones
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Disable Vaadin/web context to speed up reset
spring.main.web-application-type=none

# Exclude ALL Vaadin and web-related auto-configuration completely for reset-db profile
spring.autoconfigure.exclude=com.vaadin.flow.spring.SpringBootAutoConfiguration,\
  org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration,\
  org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration,\
  org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration,\
  org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration,\
  org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration,\
  org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration,\
  org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,\
  org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration,\
  org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration

# Logging configuration for reset operations
logging.level.tech.derbent=INFO
logging.level.tech.derbent.config.CSampleDataInitializer=DEBUG
logging.level.org.hibernate.SQL=WARN
